tabs:
  regional: "RegionalData"
  national: "NationalData"
  subnational: "SubnationalData"
  sources: "Sources"


googlesheets:
  prod: "https://docs.google.com/spreadsheets/d/1a8OfzVRU5ZKDR9EoPu0TGSqb-HqedbmJC9v9jyYGDDE/edit#gid=918365211"

json:
  filepath: "all.json"

# national
scraper_national:
  population:
    source: "WorldPop"
    source_url: "https://data.humdata.org/dataset/worldpop-population-counts-for-ukraine"
    format: "xls"
    url: "http://api.worldbank.org/v2/en/indicator/SP.POP.TOTL?downloadformat=excel&dataformat=list"
    sheet: "Data"
    headers: 3
    prefilter: "Value != ''"
    adm_cols:
      - "Country Code"
    adm_exact: True
    date_col: "Year"
    date_type: "year"
    input_cols:
      - "Value"
    output_cols:
      - "Population"
    output_hxltags:
      - "#population"
  allocations:
    source:
      "#value+cbpf+funding+total+usd": "CBPF"
      "#value+cbpf+funding+gmempty+total+usd": "CBPF"
      "#value+cbpf+funding+gm0+total+usd": "CBPF"
      "#value+cbpf+funding+gm1+total+usd": "CBPF"
      "#value+cbpf+funding+gm2+total+usd": "CBPF"
      "#value+cbpf+funding+gm3+total+usd": "CBPF"
      "#value+cbpf+funding+gm4+total+usd": "CBPF"
      "default_source": "CERF"
    source_url:
      "#value+cbpf+funding+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gmempty+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm0+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm1+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm2+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm3+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm4+total+usd": "https://data.humdata.org/dataset/cbpf-allocations-and-contributions"
      "default_url": "https://data.humdata.org/dataset/cerf-allocations"
    format: "csv"
    url: "https://cbpfgms.github.io/pfbi-data/download/full_pfmb_allocations.csv"
    dataset: "cerf-allocations"
    headers: 1
    sort:
      reverse: True
      keys:
        - "AllocationYear"
    date_col: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    adm_cols:
      - "CountryCode"
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFunding"
        output_hxltags:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == ''"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFundingGMEmpty"
        output_hxltags:
          - "#value+cbpf+funding+gmempty+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '0'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFundingGM0"
        output_hxltags:
          - "#value+cbpf+funding+gm0+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '1'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFundingGM1"
        output_hxltags:
          - "#value+cbpf+funding+gm1+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '2'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFundingGM2"
        output_hxltags:
          - "#value+cbpf+funding+gm2+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '3'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFundingGM3"
        output_hxltags:
          - "#value+cbpf+funding+gm3+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '4'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CBPFFundingGM4"
        output_hxltags:
          - "#value+cbpf+funding+gm4+total+usd"
      - filter: "FundType == 'CERF'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFunding"
        output_hxltags:
          - "#value+cerf+funding+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == ''"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFundingGMEmpty"
        output_hxltags:
          - "#value+cerf+funding+gmempty+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '0'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFundingGM0"
        output_hxltags:
          - "#value+cerf+funding+gm0+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '1'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFundingGM1"
        output_hxltags:
          - "#value+cerf+funding+gm1+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '2'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFundingGM2"
        output_hxltags:
          - "#value+cerf+funding+gm2+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '3'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFundingGM3"
        output_hxltags:
          - "#value+cerf+funding+gm3+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '4'"
        input_cols:
          - "Budget"
        input_transforms:
          Budget: "float(Budget)"
        sum_cols:
          - formula: "Budget"
            mustbepopulated: False
        output_cols:
          - "CERFFundingGM4"
        output_hxltags:
          - "#value+cerf+funding+gm4+total+usd"

fts:
  url: "https://api.hpc.tools/v"
  source: "OCHA"
  source_url: "https://data.humdata.org/dataset/fts-requirements-and-funding-data-for-ukraine"

countries:
  - UKR

country_name_overrides:

country_name_mappings:

admin1_info:
  - {country: Ukraine, iso3: UKR, pcode: UA01, name: Avtonomna Respublika Krym}
  - {country: Ukraine, iso3: UKR, pcode: UA71, name: Cherkaska}
  - {country: Ukraine, iso3: UKR, pcode: UA74, name: Chernihivska}
  - {country: Ukraine, iso3: UKR, pcode: UA73, name: Chernivetska}
  - {country: Ukraine, iso3: UKR, pcode: UA12, name: Dnipropetrovska}
  - {country: Ukraine, iso3: UKR, pcode: UA14, name: Donetska}
  - {country: Ukraine, iso3: UKR, pcode: UA26, name: Ivano Frankivska}
  - {country: Ukraine, iso3: UKR, pcode: UA63, name: Kharkivska}
  - {country: Ukraine, iso3: UKR, pcode: UA65, name: Khersonska}
  - {country: Ukraine, iso3: UKR, pcode: UA68, name: Khmelnytska}
  - {country: Ukraine, iso3: UKR, pcode: UA35, name: Kirovohradska}
  - {country: Ukraine, iso3: UKR, pcode: UA80, name: Kyivska}
  - {country: Ukraine, iso3: UKR, pcode: UA32, name: Kyivska}
  - {country: Ukraine, iso3: UKR, pcode: UA44, name: Luhanska}
  - {country: Ukraine, iso3: UKR, pcode: UA46, name: Lvivska}
  - {country: Ukraine, iso3: UKR, pcode: UA48, name: Mykolaivska}
  - {country: Ukraine, iso3: UKR, pcode: UA51, name: Odeska}
  - {country: Ukraine, iso3: UKR, pcode: UA53, name: Poltavska}
  - {country: Ukraine, iso3: UKR, pcode: UA56, name: Rivnenska}
  - {country: Ukraine, iso3: UKR, pcode: UA85, name: Sevastopol}
  - {country: Ukraine, iso3: UKR, pcode: UA59, name: Sumska}
  - {country: Ukraine, iso3: UKR, pcode: UA61, name: Ternopilska}
  - {country: Ukraine, iso3: UKR, pcode: UA05, name: Vinnytska}
  - {country: Ukraine, iso3: UKR, pcode: UA07, name: Volynska}
  - {country: Ukraine, iso3: UKR, pcode: UA21, name: Zakarpatska}
  - {country: Ukraine, iso3: UKR, pcode: UA23, name: Zaporizka}
  - {country: Ukraine, iso3: UKR, pcode: UA18, name: Zhytomyrska}

admin1_name_mappings:
  "Chernigovskaja Oblast": "UA74"
  "Chernіvеtskaja Oblast": "UA73"
  "Crimea": "UA01"
  "Luganskaja Oblast": "UA44"
  "Rovenskaja Oblast": "UA56"
  "Sevastopol City": "UA85"
  "Zapоrіzskaja Oblast": "UA23"

admin1_name_replacements:
  " urban": ""
  "sud": "south"
  "ouest": "west"
  "est": "east"
  "nord": "north"
  "'": ""
  "/": " "
  ".": " "
  " region": ""
  " oblast": ""

admin1_fuzzy_dont:
  - "nord"
  - "north"
  - "sud"
  - "south"
  - "est"
  - "east"
  - "ouest"
  - "west"
